The organization of the files has changed. Instead of grouping the different files by app, classes, functions, I am now grouping them as app, rooms, monsters, player, sprites. Each file contains the classes, functions, methods that are related to the named catergory. 
- There are three seperate spritesheets in the images folder. Sources are in the imageSrcs.txt file
- Instead of using A* algorithm, I only implemented BFS. Because of lack of level design and no actual additional costs to move around the room, I felt that A* wasn't necessary at this moment. However, if the level design complexity increases, I may or may not choose to implement A* or Dijkstra's Algorithm. 


Things completed since TP1:
    -Created a way to represent the room as a grid of pixels. 
    -Created algorithms to create an adjacency list(graph) for the rooms. 
    -Added BFS for monsters to find path to player, and moved them toward player.
    -Used BFS to find the farthest room generated to use as the boss room. 
    -Added health HUD for player and monsters/boss.
    -Spritesheet classes were created for the wizard/player, skeleton/monsters, and cyclops/boss.
    -Added Boss attacking mechanics (moves toward player, and shoots fire balls at players location)
    -Player can attack with both keys in cardnial directions and with mouse clicking in any directions
    -Player can only change room once all monster in the current room are dead. 
    -OS key pressed delay is much better. 
    -Added timers that call the lastkeypressed again if the timer goes over 0.02 seconds.


Next steps for TP3:
-Add obstacles
    player cannot move through rocks and cannot attack through them same with boss
-Add 1 or 2 more monsters
-Add 1 or 2 items to change the players mechanics
-Add more room design/background



-Add a starting screen 
-Add 1 or 2 health packs in random rooms 
-Once player beats the boss, and goes down to the next floor, make monsters stronger 
-Add 1 more boss that has different mechanics
